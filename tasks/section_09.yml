---
#
# Copyright 2014 Major Hayden
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

  - name: 9.1 Check for Remote Consoles (Scored)
    command: /usr/sbin/consadm
    register: consadm
    when: ansible_container != "zone"
    failed_when: consadm.stdout
    changed_when: consadm.stdout
    always_run: yes
    ignore_errors: yes
    tags:
      - scored
      - section9.1

  - name: 9.2 Verify File System Permissions [passwd] (Scored)
    file: >
      path=/etc/passwd
      owner=root
      group=sys
      mode=0644
    tags:
      - scored
      - section9.2

  - name: 9.2 Verify File System Permissions [shadow] (Scored)
    file: >
      path=/etc/shadow
      owner=root
      group=sys
      mode=0400
    tags:
      - scored
      - section9.2

  - name: 9.3 Ensure Password Fields are Not Empty (Scored)
    command: logins -p
    register: result9_3
    changed_when: "result9_3.stdout"
    always_run: yes
    tags:
      - scored
      - section9.3

  - name: 9.4 Verify No Legacy "+" Entries Exist in passwd, shadow and group Files [passwd] (Scored)
    shell: grep '^+:' /etc/passwd
    register: result9_4_passwd
    failed_when: result9_4_passwd.rc == 0
    changed_when: result9_4_passwd.rc == 0
    always_run: yes
    ignore_errors: yes
    tags:
      - scored
      - section9.4

  - name: 9.4 Verify No Legacy "+" Entries Exist in passwd, shadow and group Files (Scored)
    shell: grep '^+:' /etc/shadow
    register: result9_4_shadow
    failed_when: result9_4_shadow.rc == 0
    changed_when: result9_4_shadow.rc == 0
    always_run: yes
    ignore_errors: yes
    tags:
      - scored
      - section9.4

  - name: 9.4 Verify No Legacy "+" Entries Exist in passwd, shadow and group Files (Scored)
    shell: grep '^+:' /etc/group
    register: result9_4_group
    failed_when: result9_4_group.rc == 0
    changed_when: result9_4_group.rc == 0
    always_run: yes
    ignore_errors: yes
    tags:
      - scored
      - section9.4

  - name: 9.5 Verify No UID 0 Accounts Exist Other Than root (Scored)
    shell: logins -o | awk -F':' '($1 != "root" && $2 == 0) { print $1 }'
    register: result9_5
    failed_when: result9_5.stdout.strip() != ""
    changed_when: result9_5.stdout.strip() != ""
    always_run: yes
    ignore_errors: yes
    tags:
      - scored
      - section9.5

  - name: 9.6 Ensure root PATH Integrity (Scored)
    debug: msg="*** To do later"
    # XXX TBD
    tags:
      - scored
      - section9.6

  - name: 9.7 Check Permissions on User Home Directories (Scored)
    debug: msg="*** To do later"
    # XXX TBD
    tags:
      - scored
      - section9.7

  - name: 9.8 Check User Dot File Permissions (Scored)
    debug: msg="*** To do later"
    # XXX TBD
    tags:
      - scored
      - section9.8

  - name: 9.9 Check Permissions on User .netrc Files (Scored)
    debug: msg="*** To do later"
    # XXX TBD
    tags:
      - scored
      - section9.9

  - name: 9.10 Check for Presence of User .rhosts Files (Scored)
    debug: msg="*** To do later"
    # XXX TBD
    tags:
      - scored
      - section9.10

  - name: 9.11 Check Groups in /etc/passwd (Scored)
    debug: msg="*** To do later"
    # XXX TBD
    tags:
      - scored
      - section9.11

  - name: 9.12 Check That Users Are Assigned Home Directories (Scored)
    debug: msg="*** To do later"
    # XXX TBD
    tags:
      - scored
      - section9.12

  - name: 9.13 Check That Users Are Assigned Home Directories (Scored)
    debug: msg="*** To do later"
    # XXX TBD
    tags:
      - scored
      - section9.13

  - name: 9.14 Check User Home Directory Ownership (Scored)
    debug: msg="*** To do later"
    tags:
      - scored
      - section9.14

  - name: 9.15 Check for Duplicate UIDs (Scored)
    command: logins -d
    register: logins_d
    failed_when: logins_d.stdout
    changed_when: logins_d.stdout
    always_run: yes
    ignore_errors: yes
    tags:
      - scored
      - section9.15

  - name: 9.16 Check for Duplicate GIDs (Scored)
    shell: for dupeID in  $(cut -f3 -d":" /etc/group | sort | uniq -c | sort -n | awk ' $1 > 1 {print $2}'); do awk -F':' -v dupeid=$dupeID '$3 == dupeid {print $1}' /etc/group   ; done
    register: result9_2_16
    changed_when: "result9_2_16.stdout"
    always_run: yes
    tags:
      - scored
      - check-only
      - section9.16

  - name: 9.17 Check That Reserved UIDs Are Assigned to System Accounts (Scored)
    debug: msg="*** To do later"
    tags:
      - scored
      - section9.17

  - name: 9.18 Check for Duplicate User Names (Scored)
    command: logins -d
    register: logins_d
    changed_when: logins_d.stdout
    failed_when: logins_d.stdout
    always_run: yes
    tags:
      - scored
      - check-only
      - section9.18

  - name: 9.19 Check for Duplicate Group Names (Scored)
    shell: getent group | cut -f1 -d":" | sort -n | uniq -c | while read x; do [ -z "${x}" ] && break; set - $x; if [ $1 -gt 1 ]; then gids=`getent group | nawk -F":" '($1 == n) { print $3 }' n=$2 | xargs`; echo "Duplicate Group Name ($2)":" ${gids}"; fi; done
    register: result9_19
    changed_when: "result9_19.stdout"
    always_run: yes
    tags:
      - scored
      - check-only
      - section9.19

  - name: 9.20 Check for Presence of User .netrc Files (Scored)
    shell: for dir in `logins -ox | awk -F':' '($8 == "PS") { print $6 }'`; do ls -l ${dir}/.netrc 2>/dev/null; done
    register: result9_20
    changed_when: "result9_20.stdout"
    failed_when: result9_20.stdout
    always_run: yes
    tags:
      - scored
      - check-only
      - section9.2
      - section9.2.18

  - name: 9.21 Check for Presence of User .forward Files (Scored)
    shell: for dir in `logins -ox | awk -F':' '($8 == "PS") { print $6 }'`; do ls -l ${dir}/.forward 2>/dev/null; done
    register: result9_21
    changed_when: "result9_21.stdout"
    failed_when: result9_21.stdout
    always_run: yes
    tags:
      - scored
      - check-only
      - section9.21

  - name: 9.22 Find World Writable Files (Not Scored)
    shell: find / \( -fstype nfs -o -fstype cachefs -o -fstype autofs -o -fstype ctfs -o -fstype mntfs -o -fstype objfs -o -fstype proc \) -prune -o -type d \( -perm -0002 -a ! -perm -1000 \) -print
    when: verify_find
    tags:
      - notscored
      - section9.22

  - name: 9.23 Find SUID/SGID System Executables (Not Scored)
    shell: find / \( -fstype nfs -o -fstype cachefs -o -fstype autofs -o -fstype ctfs -o -fstype mntfs -o -fstype objfs -o -fstype proc \) -prune -o -type f -perm -4000 -o -perm -2000 -print
    register: result9_23
    when: verify_find
    changed_when: "result9_23.stdout"
    failed_when: result9_23.stdout
    always_run: yes
    tags:
      - notscored
      - section9.23

  - name: 9.24 Find Un-owned Files and Directories (Scored)
    shell: find / \( -fstype nfs -o -fstype cachefs -o -fstype autofs -o -fstype ctfs -o -fstype mntfs -o -fstype objfs -o -fstype proc \) -prune -o \( -nouser -o -nogroup \) -print
    register: result9_24
    when: verify_find
    changed_when: "result9_24.stdout"
    failed_when: result9_24.stdout
    always_run: yes
    tags:
      - scored
      - section9.24

  - name: 9.25 Find Files and Directories with Extended Attributes (Scored)
    shell: find / \( -fstype nfs -o -fstype cachefs -o -fstype autofs -o -fstype ctfs -o -fstype mntfs -o -fstype objfs -o -fstype proc \) -prune -o -xattr -ls
    register: result9_25
    when: verify_find
    changed_when: "result9_25.stdout"
    failed_when: result9_25.stdout
    always_run: yes
    tags:
      - scored
      - section9.25

